# Generated by Django 3.0.1 on 2020-01-02 12:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(choices=[('Road', 'Road'), ('Oval', 'Oval'), ('Dirt', 'Dirt')], verbose_name='Car type')),
                ('manufacturer', models.TextField(verbose_name='Manufacturer')),
                ('model_name', models.TextField(verbose_name='Model')),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Challenge Name')),
                ('description', models.TextField(max_length='250', verbose_name='Series Description')),
                ('date_start', models.DateTimeField(verbose_name='Challenge Starts at')),
                ('date_end', models.DateTimeField(verbose_name='Challenge Ends at')),
            ],
        ),
        migrations.CreateModel(
            name='Directories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.TextField(verbose_name='File Type')),
                ('directory', models.FilePathField(allow_files=False, allow_folders=True, verbose_name='Directory URL')),
            ],
        ),
        migrations.CreateModel(
            name='Mod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Mod Name')),
                ('mod_url', models.URLField(verbose_name='Download link')),
                ('type', models.TextField(choices=[('Track', 'Track'), ('Car', 'Car'), ('Plugin', 'Plugin'), ('Other', 'Other')], verbose_name='Mod Type')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Picture')),
            ],
        ),
        migrations.CreateModel(
            name='PointSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Point System Name')),
                ('points_for_finish', models.IntegerField(blank=True, null=True, verbose_name='Points for finish the race')),
                ('fastest_lap_points', models.IntegerField(blank=True, null=True, verbose_name='Points for fastest lap')),
                ('pole_position_points', models.IntegerField(blank=True, null=True, verbose_name='Points for pole position')),
                ('pos1', models.IntegerField(verbose_name='P1')),
                ('pos2', models.IntegerField(verbose_name='P2')),
                ('pos3', models.IntegerField(verbose_name='P3')),
                ('pos4', models.IntegerField(verbose_name='P4')),
                ('pos5', models.IntegerField(verbose_name='P5')),
                ('pos6', models.IntegerField(verbose_name='P6')),
                ('pos7', models.IntegerField(verbose_name='P7')),
                ('pos8', models.IntegerField(verbose_name='P8')),
                ('pos9', models.IntegerField(verbose_name='P9')),
                ('pos10', models.IntegerField(verbose_name='P10')),
                ('pos11', models.IntegerField(verbose_name='P11')),
                ('pos12', models.IntegerField(verbose_name='P12')),
                ('pos13', models.IntegerField(verbose_name='P13')),
                ('pos14', models.IntegerField(verbose_name='P14')),
                ('pos15', models.IntegerField(verbose_name='P15')),
                ('pos16', models.IntegerField(verbose_name='P16')),
                ('pos17', models.IntegerField(verbose_name='P17')),
                ('pos18', models.IntegerField(verbose_name='P18')),
                ('pos19', models.IntegerField(verbose_name='P19')),
                ('pos20', models.IntegerField(verbose_name='P20')),
                ('pos21', models.IntegerField(verbose_name='P21')),
                ('pos22', models.IntegerField(verbose_name='P22')),
                ('pos23', models.IntegerField(verbose_name='P23')),
                ('pos24', models.IntegerField(verbose_name='P24')),
                ('pos25', models.IntegerField(verbose_name='P25')),
                ('pos26', models.IntegerField(verbose_name='P26')),
                ('pos27', models.IntegerField(verbose_name='P27')),
                ('pos28', models.IntegerField(verbose_name='P28')),
                ('pos29', models.IntegerField(verbose_name='P29')),
                ('pos30', models.IntegerField(verbose_name='P30')),
                ('pos31', models.IntegerField(verbose_name='P31')),
                ('pos32', models.IntegerField(verbose_name='P32')),
                ('pos33', models.IntegerField(verbose_name='P33')),
                ('pos34', models.IntegerField(verbose_name='P34')),
                ('pos35', models.IntegerField(verbose_name='P35')),
                ('pos36', models.IntegerField(verbose_name='P36')),
                ('pos37', models.IntegerField(verbose_name='P37')),
                ('pos38', models.IntegerField(verbose_name='P38')),
                ('pos39', models.IntegerField(verbose_name='P39')),
                ('pos40', models.IntegerField(verbose_name='P40')),
            ],
        ),
        migrations.CreateModel(
            name='Qualifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race_name', models.TextField(verbose_name='Race Name')),
                ('description', models.TextField(blank=True, max_length='250', null=True, verbose_name='Race Description')),
                ('race_date', models.DateTimeField(verbose_name='Race date')),
                ('isSpecialEvent', models.BooleanField(verbose_name='Race is special event')),
                ('length', models.IntegerField(verbose_name='Race Length')),
                ('length_type', models.TextField(choices=[('Time', 'Time'), ('Laps', 'Laps')], verbose_name='Race Lenght Type')),
                ('series_race', models.BooleanField(verbose_name='Official Series Race')),
                ('country', models.TextField(choices=[('Afghan', 'Afghan'), ('Albanian', 'Albanian'), ('Algerian', 'Algerian'), ('American', 'American'), ('Andorran', 'Andorran'), ('Angolan', 'Angolan'), ('Antiguans', 'Antiguans'), ('Argentinean', 'Argentinean'), ('Armenian', 'Armenian'), ('Australian', 'Australian'), ('Austrian', 'Austrian'), ('Azerbaijani', 'Azerbaijani'), ('Bahamian', 'Bahamian'), ('Bahraini', 'Bahraini'), ('Bangladeshi', 'Bangladeshi'), ('Barbadian', 'Barbadian'), ('Barbudans', 'Barbudans'), ('Batswana', 'Batswana'), ('Belarusian', 'Belarusian'), ('Belgian', 'Belgian'), ('Belizean', 'Belizean'), ('Beninese', 'Beninese'), ('Bhutanese', 'Bhutanese'), ('Bolivian', 'Bolivian'), ('Bosnian', 'Bosnian'), ('Brazilian', 'Brazilian'), ('British', 'British'), ('Bruneian', 'Bruneian'), ('Bulgarian', 'Bulgarian'), ('Burkinabe', 'Burkinabe'), ('Burmese', 'Burmese'), ('Burundian', 'Burundian'), ('Cambodian', 'Cambodian'), ('Cameroonian', 'Cameroonian'), ('Canadian', 'Canadian'), ('Cape Verdean', 'Cape Verdean'), ('Central African', 'Central African'), ('Chadian', 'Chadian'), ('Chilean', 'Chilean'), ('Chinese', 'Chinese'), ('Colombian', 'Colombian'), ('Comoran', 'Comoran'), ('Congolese', 'Congolese'), ('Costa Rican', 'Costa Rican'), ('Croatian', 'Croatian'), ('Cuban', 'Cuban'), ('Cypriot', 'Cypriot'), ('Czech', 'Czech'), ('Danish', 'Danish'), ('Djibouti', 'Djibouti'), ('Dominican', 'Dominican'), ('Dutch', 'Dutch'), ('Dutchman', 'Dutchman'), ('Dutchwoman', 'Dutchwoman'), ('East Timorese', 'East Timorese'), ('Ecuadorean', 'Ecuadorean'), ('Egyptian', 'Egyptian'), ('Emirian', 'Emirian'), ('Equatorial Guinean', 'Equatorial Guinean'), ('Eritrean', 'Eritrean'), ('Estonian', 'Estonian'), ('Ethiopian', 'Ethiopian'), ('Fijian', 'Fijian'), ('Filipino', 'Filipino'), ('Finnish', 'Finnish'), ('French', 'French'), ('Gabonese', 'Gabonese'), ('Gambian', 'Gambian'), ('Georgian', 'Georgian'), ('German', 'German'), ('Ghanaian', 'Ghanaian'), ('Greek', 'Greek'), ('Grenadian', 'Grenadian'), ('Guatemalan', 'Guatemalan'), ('Guinea-Bissauan', 'Guinea-Bissauan'), ('Guinean', 'Guinean'), ('Guyanese', 'Guyanese'), ('Haitian', 'Haitian'), ('Herzegovinian', 'Herzegovinian'), ('Honduran', 'Honduran'), ('Hungarian', 'Hungarian'), ('I-Kiribati', 'I-Kiribati'), ('Icelander', 'Icelander'), ('Indian', 'Indian'), ('Indonesian', 'Indonesian'), ('Iranian', 'Iranian'), ('Iraqi', 'Iraqi'), ('Irish', 'Irish'), ('Israeli', 'Israeli'), ('Italian', 'Italian'), ('Ivorian', 'Ivorian'), ('Jamaican', 'Jamaican'), ('Japanese', 'Japanese'), ('Jordanian', 'Jordanian'), ('Kazakhstani', 'Kazakhstani'), ('Kenyan', 'Kenyan'), ('Kittian and Nevisian', 'Kittian and Nevisian'), ('Kuwaiti', 'Kuwaiti'), ('Kyrgyz', 'Kyrgyz'), ('Laotian', 'Laotian'), ('Latvian', 'Latvian'), ('Lebanese', 'Lebanese'), ('Liberian', 'Liberian'), ('Libyan', 'Libyan'), ('Liechtensteiner', 'Liechtensteiner'), ('Lithuanian', 'Lithuanian'), ('Luxembourger', 'Luxembourger'), ('Macedonian', 'Macedonian'), ('Malagasy', 'Malagasy'), ('Malawian', 'Malawian'), ('Malaysian', 'Malaysian'), ('Maldivan', 'Maldivan'), ('Malian', 'Malian'), ('Maltese', 'Maltese'), ('Marshallese', 'Marshallese'), ('Mauritanian', 'Mauritanian'), ('Mauritian', 'Mauritian'), ('Mexican', 'Mexican'), ('Micronesian', 'Micronesian'), ('Moldovan', 'Moldovan'), ('Monacan', 'Monacan'), ('Mongolian', 'Mongolian'), ('Moroccan', 'Moroccan'), ('Mosotho', 'Mosotho'), ('Motswana', 'Motswana'), ('Mozambican', 'Mozambican'), ('Namibian', 'Namibian'), ('Nauruan', 'Nauruan'), ('Nepalese', 'Nepalese'), ('Netherlander', 'Netherlander'), ('New Zealander', 'New Zealander'), ('Ni-Vanuatu', 'Ni-Vanuatu'), ('Nicaraguan', 'Nicaraguan'), ('Nigerian', 'Nigerian'), ('Nigerien', 'Nigerien'), ('North Korean', 'North Korean'), ('Northern Irish', 'Northern Irish'), ('Norwegian', 'Norwegian'), ('Omani', 'Omani'), ('Pakistani', 'Pakistani'), ('Palauan', 'Palauan'), ('Panamanian', 'Panamanian'), ('Papua New Guinean', 'Papua New Guinean'), ('Paraguayan', 'Paraguayan'), ('Peruvian', 'Peruvian'), ('Polish', 'Polish'), ('Portuguese', 'Portuguese'), ('Qatari', 'Qatari'), ('Romanian', 'Romanian'), ('Russian', 'Russian'), ('Rwandan', 'Rwandan'), ('Saint Lucian', 'Saint Lucian'), ('Salvadoran', 'Salvadoran'), ('Samoan', 'Samoan'), ('San Marinese', 'San Marinese'), ('Sao Tomean', 'Sao Tomean'), ('Saudi', 'Saudi'), ('Scottish', 'Scottish'), ('Senegalese', 'Senegalese'), ('Serbian', 'Serbian'), ('Seychellois', 'Seychellois'), ('Sierra Leonean', 'Sierra Leonean'), ('Singaporean', 'Singaporean'), ('Slovakian', 'Slovakian'), ('Slovenian', 'Slovenian'), ('Solomon Islander', 'Solomon Islander'), ('Somali', 'Somali'), ('South African', 'South African'), ('South Korean', 'South Korean'), ('Spanish', 'Spanish'), ('Sri Lankan', 'Sri Lankan'), ('Sudanese', 'Sudanese'), ('Surinamer', 'Surinamer'), ('Swazi', 'Swazi'), ('Swedish', 'Swedish'), ('Swiss', 'Swiss'), ('Syrian', 'Syrian'), ('Taiwanese', 'Taiwanese'), ('Tajik', 'Tajik'), ('Tanzanian', 'Tanzanian'), ('Thai', 'Thai'), ('Togolese', 'Togolese'), ('Tongan', 'Tongan'), ('Trinidadian or Tobagonian', 'Trinidadian or Tobagonian'), ('Tunisian', 'Tunisian'), ('Turkish', 'Turkish'), ('Tuvaluan', 'Tuvaluan'), ('Ugandan', 'Ugandan'), ('Ukrainian', 'Ukrainian'), ('Uruguayan', 'Uruguayan'), ('Uzbekistani', 'Uzbekistani'), ('Venezuelan', 'Venezuelan'), ('Vietnamese', 'Vietnamese'), ('Welsh', 'Welsh'), ('Yemenite', 'Yemenite'), ('Zambian', 'Zambian'), ('Zimbabwean', 'Zimbabwean')], verbose_name='Race Country')),
                ('real_road_coef', models.IntegerField(verbose_name='Real Road Coef.')),
                ('start_type', models.TextField(choices=[('Single File + Rolling', 'Single File + Rolling'), ('Standing', 'Standing')], verbose_name='Start Type')),
                ('in_sim_time', models.TimeField(verbose_name='In Sim Time')),
                ('weather', models.TextField(choices=[('Scripted', 'Scripted'), ('Real Weather', 'Real Weather')], verbose_name='Weather Type')),
                ('weather_scripted_description', models.TextField(blank=True, null=True, verbose_name='Scripted Weather: ')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Series Name')),
                ('description', models.TextField(max_length='250', verbose_name='Series Description')),
                ('minimum_race_distance_for_points', models.IntegerField(verbose_name='Minimum race distance to get points')),
                ('results_to_ignore', models.IntegerField(verbose_name='Number of driver worst results to ignore')),
                ('team_car_results', models.IntegerField(verbose_name='Number of team cars that are awarded points for team championship')),
                ('tire_acceleration', models.IntegerField(verbose_name='Tire Degradation')),
                ('fuel_acceleration', models.IntegerField(verbose_name='Fuel Consumption')),
                ('time_acceleration', models.IntegerField(verbose_name='Time Acceleration')),
                ('abs_allowed', models.BooleanField(verbose_name='ABS')),
                ('tc_allowed', models.BooleanField(verbose_name='TC')),
                ('shift_allowed', models.BooleanField(verbose_name='Shift')),
                ('clutch_allowed', models.BooleanField(verbose_name='Clutch')),
                ('damages', models.IntegerField(verbose_name='Damage')),
                ('point_system', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.PointSystem')),
            ],
        ),
        migrations.CreateModel(
            name='Simulator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Simulator Name')),
                ('logo', models.ImageField(upload_to='', verbose_name='Logo')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=150, verbose_name='Team Name')),
                ('nationality', models.TextField(choices=[('Afghan', 'Afghan'), ('Albanian', 'Albanian'), ('Algerian', 'Algerian'), ('American', 'American'), ('Andorran', 'Andorran'), ('Angolan', 'Angolan'), ('Antiguans', 'Antiguans'), ('Argentinean', 'Argentinean'), ('Armenian', 'Armenian'), ('Australian', 'Australian'), ('Austrian', 'Austrian'), ('Azerbaijani', 'Azerbaijani'), ('Bahamian', 'Bahamian'), ('Bahraini', 'Bahraini'), ('Bangladeshi', 'Bangladeshi'), ('Barbadian', 'Barbadian'), ('Barbudans', 'Barbudans'), ('Batswana', 'Batswana'), ('Belarusian', 'Belarusian'), ('Belgian', 'Belgian'), ('Belizean', 'Belizean'), ('Beninese', 'Beninese'), ('Bhutanese', 'Bhutanese'), ('Bolivian', 'Bolivian'), ('Bosnian', 'Bosnian'), ('Brazilian', 'Brazilian'), ('British', 'British'), ('Bruneian', 'Bruneian'), ('Bulgarian', 'Bulgarian'), ('Burkinabe', 'Burkinabe'), ('Burmese', 'Burmese'), ('Burundian', 'Burundian'), ('Cambodian', 'Cambodian'), ('Cameroonian', 'Cameroonian'), ('Canadian', 'Canadian'), ('Cape Verdean', 'Cape Verdean'), ('Central African', 'Central African'), ('Chadian', 'Chadian'), ('Chilean', 'Chilean'), ('Chinese', 'Chinese'), ('Colombian', 'Colombian'), ('Comoran', 'Comoran'), ('Congolese', 'Congolese'), ('Costa Rican', 'Costa Rican'), ('Croatian', 'Croatian'), ('Cuban', 'Cuban'), ('Cypriot', 'Cypriot'), ('Czech', 'Czech'), ('Danish', 'Danish'), ('Djibouti', 'Djibouti'), ('Dominican', 'Dominican'), ('Dutch', 'Dutch'), ('Dutchman', 'Dutchman'), ('Dutchwoman', 'Dutchwoman'), ('East Timorese', 'East Timorese'), ('Ecuadorean', 'Ecuadorean'), ('Egyptian', 'Egyptian'), ('Emirian', 'Emirian'), ('Equatorial Guinean', 'Equatorial Guinean'), ('Eritrean', 'Eritrean'), ('Estonian', 'Estonian'), ('Ethiopian', 'Ethiopian'), ('Fijian', 'Fijian'), ('Filipino', 'Filipino'), ('Finnish', 'Finnish'), ('French', 'French'), ('Gabonese', 'Gabonese'), ('Gambian', 'Gambian'), ('Georgian', 'Georgian'), ('German', 'German'), ('Ghanaian', 'Ghanaian'), ('Greek', 'Greek'), ('Grenadian', 'Grenadian'), ('Guatemalan', 'Guatemalan'), ('Guinea-Bissauan', 'Guinea-Bissauan'), ('Guinean', 'Guinean'), ('Guyanese', 'Guyanese'), ('Haitian', 'Haitian'), ('Herzegovinian', 'Herzegovinian'), ('Honduran', 'Honduran'), ('Hungarian', 'Hungarian'), ('I-Kiribati', 'I-Kiribati'), ('Icelander', 'Icelander'), ('Indian', 'Indian'), ('Indonesian', 'Indonesian'), ('Iranian', 'Iranian'), ('Iraqi', 'Iraqi'), ('Irish', 'Irish'), ('Israeli', 'Israeli'), ('Italian', 'Italian'), ('Ivorian', 'Ivorian'), ('Jamaican', 'Jamaican'), ('Japanese', 'Japanese'), ('Jordanian', 'Jordanian'), ('Kazakhstani', 'Kazakhstani'), ('Kenyan', 'Kenyan'), ('Kittian and Nevisian', 'Kittian and Nevisian'), ('Kuwaiti', 'Kuwaiti'), ('Kyrgyz', 'Kyrgyz'), ('Laotian', 'Laotian'), ('Latvian', 'Latvian'), ('Lebanese', 'Lebanese'), ('Liberian', 'Liberian'), ('Libyan', 'Libyan'), ('Liechtensteiner', 'Liechtensteiner'), ('Lithuanian', 'Lithuanian'), ('Luxembourger', 'Luxembourger'), ('Macedonian', 'Macedonian'), ('Malagasy', 'Malagasy'), ('Malawian', 'Malawian'), ('Malaysian', 'Malaysian'), ('Maldivan', 'Maldivan'), ('Malian', 'Malian'), ('Maltese', 'Maltese'), ('Marshallese', 'Marshallese'), ('Mauritanian', 'Mauritanian'), ('Mauritian', 'Mauritian'), ('Mexican', 'Mexican'), ('Micronesian', 'Micronesian'), ('Moldovan', 'Moldovan'), ('Monacan', 'Monacan'), ('Mongolian', 'Mongolian'), ('Moroccan', 'Moroccan'), ('Mosotho', 'Mosotho'), ('Motswana', 'Motswana'), ('Mozambican', 'Mozambican'), ('Namibian', 'Namibian'), ('Nauruan', 'Nauruan'), ('Nepalese', 'Nepalese'), ('Netherlander', 'Netherlander'), ('New Zealander', 'New Zealander'), ('Ni-Vanuatu', 'Ni-Vanuatu'), ('Nicaraguan', 'Nicaraguan'), ('Nigerian', 'Nigerian'), ('Nigerien', 'Nigerien'), ('North Korean', 'North Korean'), ('Northern Irish', 'Northern Irish'), ('Norwegian', 'Norwegian'), ('Omani', 'Omani'), ('Pakistani', 'Pakistani'), ('Palauan', 'Palauan'), ('Panamanian', 'Panamanian'), ('Papua New Guinean', 'Papua New Guinean'), ('Paraguayan', 'Paraguayan'), ('Peruvian', 'Peruvian'), ('Polish', 'Polish'), ('Portuguese', 'Portuguese'), ('Qatari', 'Qatari'), ('Romanian', 'Romanian'), ('Russian', 'Russian'), ('Rwandan', 'Rwandan'), ('Saint Lucian', 'Saint Lucian'), ('Salvadoran', 'Salvadoran'), ('Samoan', 'Samoan'), ('San Marinese', 'San Marinese'), ('Sao Tomean', 'Sao Tomean'), ('Saudi', 'Saudi'), ('Scottish', 'Scottish'), ('Senegalese', 'Senegalese'), ('Serbian', 'Serbian'), ('Seychellois', 'Seychellois'), ('Sierra Leonean', 'Sierra Leonean'), ('Singaporean', 'Singaporean'), ('Slovakian', 'Slovakian'), ('Slovenian', 'Slovenian'), ('Solomon Islander', 'Solomon Islander'), ('Somali', 'Somali'), ('South African', 'South African'), ('South Korean', 'South Korean'), ('Spanish', 'Spanish'), ('Sri Lankan', 'Sri Lankan'), ('Sudanese', 'Sudanese'), ('Surinamer', 'Surinamer'), ('Swazi', 'Swazi'), ('Swedish', 'Swedish'), ('Swiss', 'Swiss'), ('Syrian', 'Syrian'), ('Taiwanese', 'Taiwanese'), ('Tajik', 'Tajik'), ('Tanzanian', 'Tanzanian'), ('Thai', 'Thai'), ('Togolese', 'Togolese'), ('Tongan', 'Tongan'), ('Trinidadian or Tobagonian', 'Trinidadian or Tobagonian'), ('Tunisian', 'Tunisian'), ('Turkish', 'Turkish'), ('Tuvaluan', 'Tuvaluan'), ('Ugandan', 'Ugandan'), ('Ukrainian', 'Ukrainian'), ('Uruguayan', 'Uruguayan'), ('Uzbekistani', 'Uzbekistani'), ('Venezuelan', 'Venezuelan'), ('Vietnamese', 'Vietnamese'), ('Welsh', 'Welsh'), ('Yemenite', 'Yemenite'), ('Zambian', 'Zambian'), ('Zimbabwean', 'Zimbabwean')], verbose_name='Nationality')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Avatar')),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Track Name')),
                ('type', models.TextField(choices=[('Road', 'Road'), ('Oval', 'Oval'), ('Dirt', 'Dirt'), ('Snow', 'Snow')], verbose_name='Track Type')),
                ('length', models.FloatField(verbose_name='Track Length')),
                ('track_map', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Track Map')),
                ('track_picture', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Track Picture')),
                ('mod', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.Mod')),
            ],
        ),
        migrations.CreateModel(
            name='SeriesStandings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.TextField(verbose_name='File Name')),
                ('qualifications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Series')),
            ],
        ),
        migrations.CreateModel(
            name='SeriesCars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Car')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Series')),
            ],
        ),
        migrations.AddField(
            model_name='series',
            name='simulator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Simulator'),
        ),
        migrations.CreateModel(
            name='RaceResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.TextField(verbose_name='File Name')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Race')),
            ],
        ),
        migrations.AddField(
            model_name='race',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.Series'),
        ),
        migrations.AddField(
            model_name='race',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Track'),
        ),
        migrations.CreateModel(
            name='QualificationsResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.TextField(verbose_name='File Name')),
                ('qualifications', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Qualifications')),
            ],
        ),
        migrations.AddField(
            model_name='qualifications',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Race'),
        ),
        migrations.CreateModel(
            name='ChallengeCars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Car')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Challenge')),
            ],
        ),
        migrations.AddField(
            model_name='challenge',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Track'),
        ),
        migrations.AddField(
            model_name='car',
            name='mod',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.Mod'),
        ),
    ]
